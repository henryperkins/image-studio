services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: image-studio-api
    restart: unless-stopped
    ports:
      - "8787:8787"  # Expose API directly for debugging (optional)
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=8787
      - CORS_ORIGIN=https://studio.lakefrontdigital.io
      # Azure OpenAI settings (override with .env or environment)
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_AUTH_TOKEN=${AZURE_OPENAI_AUTH_TOKEN:-}
      - AZURE_OPENAI_IMAGE_DEPLOYMENT=${AZURE_OPENAI_IMAGE_DEPLOYMENT}
      - AZURE_OPENAI_IMAGE_BASE=${AZURE_OPENAI_IMAGE_BASE:-dall-e-3}
      - AZURE_OPENAI_VIDEO_DEPLOYMENT=${AZURE_OPENAI_VIDEO_DEPLOYMENT}
      - AZURE_OPENAI_VISION_DEPLOYMENT=${AZURE_OPENAI_VISION_DEPLOYMENT}
      - AZURE_OPENAI_CHAT_API_VERSION=${AZURE_OPENAI_CHAT_API_VERSION}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_CONTENT_SAFETY_ENDPOINT=${AZURE_CONTENT_SAFETY_ENDPOINT:-}
      - AZURE_CONTENT_SAFETY_KEY=${AZURE_CONTENT_SAFETY_KEY:-}
      - MODERATION_STRICT=${MODERATION_STRICT:-false}
      - MODERATION_FAIL_OPEN=${MODERATION_FAIL_OPEN:-false}
      - AZURE_OPENAI_SEED=${AZURE_OPENAI_SEED:-}
    volumes:
      - ./data:/app/server/data  # Persistent storage for images/videos
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "node -e 'require(\"http\").get(\"http://localhost:8787/healthz\", (r) => process.exit(r.statusCode === 200 ? 0 : 1))'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: image-studio-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  media-data:
    driver: local